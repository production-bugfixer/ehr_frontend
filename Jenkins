pipeline {
  agent any

  tools {
    nodejs 'nodejs14'  // <- name must match what you configured above
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Install') {
      steps {
        sh 'npm install'
      }
    }

    stage('Build') {
      steps {
        sh 'npm run build -- --output-path=dist'
      }
    }

    stage('Deploy to Nginx') {
      steps {
        script {
          def ngBuildPath = "/var/lib/jenkins/workspace/ehr-frontend/dist"
          def deployPath = "/var/www/html/angular3200"
          def nginxConfPath = "/etc/nginx/sites-available/angular3200.conf"
          def nginxLinkPath = "/etc/nginx/sites-enabled/angular3200.conf"

          sh """
            echo "Deploying Angular App to Nginx (port 3200)..."

            # Create deployment directory
            sudo mkdir -p ${deployPath}

            # Copy build files
            sudo rm -rf ${deployPath}/*
            sudo cp -r ${ngBuildPath}/* ${deployPath}/

            # Set permissions
            sudo chown -R www-data:www-data ${deployPath}
            sudo chmod -R 755 ${deployPath}

            # Create Nginx config if not exists
            if [ ! -f ${nginxConfPath} ]; then
              echo "Creating Nginx config for port 3200..."
              sudo bash -c 'cat > ${nginxConfPath}' <<EOF
server {
    listen 3200;
    server_name localhost;

    root ${deployPath};
    index index.html;

    location / {
        try_files \$uri \$uri/ /index.html;
    }
}
EOF
              sudo ln -s ${nginxConfPath} ${nginxLinkPath}
            fi

            # Reload or start Nginx
            echo "Validating Nginx config..."
            sudo nginx -t
            if systemctl is-active --quiet nginx; then
              echo "Reloading Nginx..."
              sudo systemctl reload nginx
            else
              echo "Starting Nginx (was not active)..."
              sudo systemctl start nginx
            fi
          """
        }
      }
    }
  }
}
